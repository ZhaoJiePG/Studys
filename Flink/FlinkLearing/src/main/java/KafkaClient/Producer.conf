acks
消息被确认写入成功前，必须写入成功的分区副本数，由生产者的 acks 参数控制：
0，生产者发送消息，不等待 broker 响应，即使出现错误，生产者亦无感知（返回的偏移量为 -1）
1，默认值，分区 leader 副本完成消息写入即确认消息写入成功
-1（all），需要分区的全部 ISR 副本完成消息写入
acks 配置与 “可靠性” 密切相关，更多内容，包括 ISR 概念，请参阅《Kafka 的 “可靠性” 保障》章节。

compression.type
通过压缩，能够降低网络传输和存储的成本，默认不进行压缩（none）。compression.type 配置压缩的算法，包括：snappy 或 gzip。
buffer.memory / max.block.ms
生产者的消息缓冲区大小（字节数），默认 32 * 1024 * 1024。缓冲区不足时，生产者的 send 方法调用将被阻塞，阻塞时间上限由 max.block.ms 指定，默认 60 秒。超过阻塞时间上限，将返回异常。

batch.size / linger.ms
Kafka 生产者将消息按照主题和分区划分不同的批次，当一个批次的大小（字节数）达到 batch.size 或等待时间超过 linger.ms，即进行发送。

batch.size 默认值 16 * 1024，linger.ms默认值 0。
max.request.size

生产者的发送请求（表示一个 “消息批次” 的发送）大小（字节数）的上限，默认为：1 * 1024 * 1024。亦限制了单个消息的大小（当一个 “消息批次” 仅包含一个消息）。
request.timeout.ms

生产者的发送请求，等待 Kafka broker 响的超时时间，默认 30 秒。
retries / retry.backoff.ms

消息发送出现 “可重试错误” 时，retries 指定了生产者重新发送消息的次数上限，默认为 0（无重试），重试的时间间隔即为 retry.backoff.ms（默认 100ms）。
max.in.flight.requests.per.connection

收到 broker 返回前，生产者的发送请求的上限，由 max.in.flight.requests.per.connection确定，默认为 5。
需要说明，若启用重试，max.in.flight.requests.per.connection 通常建议设置为 1，以保证消息发送的有序性，但将降低生产者的吞吐。